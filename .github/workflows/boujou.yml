# name: Test Boujou
# run-name: ${{ github.actor }} initializing GitHub Actions
# on:
#   push:
#     branches:
#       - "main"
# env:
#   DATABASE_URL: "postgresql://postgres:postgres@db/boujou?schema=public"
# jobs:
#   info:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Output github context
#         run: echo "${{ toJSON(secrets) }}"
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get code
#         uses: actions/checkout@v3
#       - name: Install dependencies
#         run: npm ci
#       - name: Linter
#         run: npm run lint
#   deploy-development:
#     runs-on: ubuntu-latest
#     needs: [test]
#     environment:
#       name: development
#       url: http://MON_IP:3000
#     permissions:
#       contents: read
#       packages: write
#     steps:
#       - uses: actions/checkout@v3
#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v2
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}
#       - name: Build and push
#         uses: docker/build-push-action@v4
#         with:
#           push: true
#           tags: ghcr.io/geoffroybel/citoyen:latest
name: Test Boujou
run-name: ${{ github.actor }} initializing GitHub Actions
on:
  push:
    branches:
      - "main"
env:
  DATABASE_URL: "postgresql://postgres:postgres@db/boujou?schema=public"

jobs:
  info:
    runs-on: ubuntu-latest
    steps:
      - name: Output github context
        run: echo "${{ toJSON(secrets) }}"

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Linter
        run: npm run lint

  test-cypress:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: boujou
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Build the application
        run: npm run build

      - name: Start the application
        run: npm start &
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Wait for the application to be ready
        run: npx wait-on http://localhost:3000

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6

  deploy-development:
    runs-on: ubuntu-latest
    needs: [test-cypress]
    environment:
      name: development
      url: http://MON_IP:3000
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/geoffroybel/citoyen:latest
